[build-system]
requires = ["setuptools", "wheel", "Cython>=3.0.0"]

[project]
description = "python-constraint is a module implementing support for handling CSPs (Constraint Solving Problems) over finite domain"
name = "python-constraint"
version = "2.0.0"
requires-python = ">=3.8"
license = { file = "LICENSE" }
authors = [
    { name = "Gustavo Niemeyer", email = "gustavo@niemeyer.net" },
    { name = "SÃ©bastien Celles", email = "s.celles@gmail.com" },
    { name = "Floris-Jan Willemsen", email = "fjwillemsen97@gmail.com" },
]
keywords = [
    "CSP",
    "constraint solving problems",
    "problem solver",
    "SMT",
    "satisfiability modulo theory",
    "SAT",
]
classifiers = [
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development",
    "Development Status :: 5 - Production/Stable",
]

[project.readme]
file = "README.rst"
content-type = "text/x-rst"

[project.urls]
Homepage = "https://labix.org/python-constraint"
Documentation = "http://labix.org/doc/constraint/"
Source = "https://github.com/python-constraint/python-constraint"
Tracker = "https://github.com/python-constraint/python-constraint/issues"

[project.optional-dependencies]
test = [
    "pytest >= 7.3.1",
    "pytest-cov >= 4.0.0",
    "nox >= 2023.4.22",
    "ruff >= 0.0.263",
    "pep440 >= 0.1.2",
    "tomli >= 2.0.1",      # can be replaced by built-in [tomllib](https://docs.python.org/3.11/library/tomllib.html) from Python 3.11
]

[tool.setuptools]
py-modules = ["setup_cythonize"]
[tool.setuptools.cmdclass]
build_py = "setup_cythonize.build_py"

[tool.black]
line-length = 120
[tool.ruff]
line-length = 120
src = ["constraint"]
respect-gitignore = true
exclude = ["documentation", "examples", "tests"]
select = [
    "E", # pycodestyle
    "F", # pyflakes,
    "D", # pydocstyle,
]
[tool.ruff.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
minversion = "7.3"
pythonpath = [
    "src",
] # necessary to get coverage reports without installing with `-e`
addopts = "--cov --cov-config=.coveragerc --cov-report html --cov-report term-missing --cov-fail-under 65"
testpaths = ["tests"]
